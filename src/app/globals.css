@tailwind base;
@tailwind components;
@tailwind utilities;
@import "tw-animate-css";

@custom-variant dark (&:is(.dark *));


@layer base {
  * {
    @apply border-border outline-ring/50;
  }
  body {
    @apply bg-background text-foreground;
    /* Applied custom font for body text */
    font-family: var(--font-body), ui-sans-serif, system-ui, sans-serif;
  }

  /* Fixed neubrutalist typography and button styles with proper spacing */
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-family: var(--font-heading), ui-sans-serif, system-ui, sans-serif;
    font-weight: 900;
    text-transform: uppercase;
    letter-spacing: -0.02em;
  }

  /* Neubrutalist button styles with thick borders */
  .neubrutalist-button {
    @apply bg-primary text-primary-foreground border-4 border-black font-bold uppercase tracking-wide transition-all duration-150;
    box-shadow: 4px 4px 0px 0px rgba(0, 0, 0, 1);
  }

  .neubrutalist-button:hover {
    box-shadow: 2px 2px 0px 0px rgba(0, 0, 0, 1);
    transform: translate(2px, 2px);
  }

  .neubrutalist-card {
    @apply bg-card border-4 border-black p-6;
    box-shadow: 8px 8px 0px 0px rgba(0, 0, 0, 1);
  }
}

/* Added smooth scrolling and custom animations */
html {
  scroll-behavior: smooth;
}

html.has-scroll-smooth {
  overflow: hidden;
  height: 100%;
}

html.has-scroll-dragging {
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.has-scroll-smooth body {
  overflow: hidden;
  height: 100%;
}

.has-scroll-smooth [data-scroll-container] {
  min-height: 100vh;
  overflow: hidden;
}

[data-scroll-direction="horizontal"] [data-scroll-container] {
  height: 100vh;
  display: inline-block;
  white-space: nowrap;
}

[data-scroll-direction="horizontal"] [data-scroll-section] {
  display: inline-block;
  vertical-align: top;
  white-space: nowrap;
  height: 100%;
}

.c-scrollbar {
  position: absolute;
  right: 0;
  top: 0;
  width: 11px;
  height: 100%;
  transform-origin: center right;
  transition: transform 0.3s, opacity 0.3s;
  opacity: 0;
}

.c-scrollbar:hover {
  transform: scaleX(1.45);
}

.c-scrollbar.c-scrollbar_visible {
  opacity: 1;
}

.c-scrollbar_thumb {
  position: absolute;
  top: 0;
  right: 0;
  background-color: var(--color-primary);
  opacity: 0.5;
  width: 7px;
  border-radius: 10px;
  margin: 2px;
  cursor: -webkit-grab;
  cursor: grab;
}

.has-scroll-smooth .c-scrollbar_thumb {
  cursor: -webkit-grabbing;
  cursor: grabbing;
}

/* Enhanced magnetic button effects */
.magnetic-button {
  transition: transform 0.3s cubic-bezier(0.23, 1, 0.32, 1);
}

.magnetic-button:hover {
  transform: translateY(-2px);
}

/* Smooth reveal animations */
.reveal-element {
  opacity: 0;
  transform: translateY(50px);
  transition: all 0.8s cubic-bezier(0.23, 1, 0.32, 1);
}

.reveal-element.is-revealed {
  opacity: 1;
  transform: translateY(0);
}

/* Enhanced gradient animations */
@keyframes gradientShift {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

.animate-gradient {
  background-size: 200% 200%;
  animation: gradientShift 3s ease infinite;
}

/* Floating animation for background elements */
@keyframes float {
  0%,
  100% {
    transform: translateY(0px) rotate(0deg);
  }
  33% {
    transform: translateY(-20px) rotate(120deg);
  }
  66% {
    transform: translateY(10px) rotate(240deg);
  }
}

.floating-element {
  animation: float 6s ease-in-out infinite;
}

.floating-element:nth-child(2) {
  animation-delay: -2s;
}

.floating-element:nth-child(3) {
  animation-delay: -4s;
}

.floating-element:nth-child(4) {
  animation-delay: -1s;
}

.cursor-pointer:hover {
  cursor: pointer;
}

/* Smooth transitions for all interactive elements */
* {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow,
    transform, filter, backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

.animate-fade-in-up {
  animation: fadeInUp 0.6s ease-out forwards;
}

.animate-slide-in-left {
  animation: slideInLeft 0.6s ease-out forwards;
}
